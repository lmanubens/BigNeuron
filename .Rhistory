cdat <- unique(cdat)
cdat <- remove_missing(cdat)
grps <- data.frame(ids=cdat$ids,dataset=cdat$dataset)
cdat$ids <- NULL
cdat$dataset <- NULL
# rownames(cdat) <- paste0(grps$ids,'_',grps$dataset)
# hclust <- hclust(dist(cdat),method="ward.D2")
# dend <- colour_clusters(hclust, k=5, groupLabels=T)
# dend_labels <- labels(dend)
# labels(dend) <- ""
# plot(rev(dend),main="Hier. Clustering - IQ metrics",horiz=F)
# text(x = 1:length(dend_labels), labels = dend_labels, srt = 45, adj = c(1,1), xpd = T, cex=0.5)
####### Combined PCA
cdat_iq2 <- cdat_iq[,names(cdat_iq) %in% names(cdat)]
cdat_iq2 <- cdat_iq2[,match(names(cdat_iq2),names(cdat))]
pcadata <- rbind(cdat_iq2,cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",])
# print(length(pcadata))
# library(mlr3)
library(ggpubr)
library(dplyr)
library(dendroextras)
library(mclust)
library(ggbiplot)
#### Load shiny data
load("../../Both_GS_and_auto/shiny_app/subsetdata_v3.Rdata")
g163data <- my_data
load("../../Both_GS_and_auto/shiny_app/groupsdf.Rdata")
groupsdf$dataset <- substring(groupsdf$dataset,12)
groupsdf$dataset[groupsdf$dataset=="chick_uw"] <- "Chicken UW"
groupsdf$dataset[groupsdf$dataset=="frog_scrippts"] <- "Frog Scripps"
groupsdf$dataset[groupsdf$dataset=="fruitfly_larvae_gmu"] <- "Fly larvae GMU"
groupsdf$dataset[groupsdf$dataset=="human_allen_confocal"] <- "Human Allen"
groupsdf$dataset[groupsdf$dataset=="human_culturedcell_Cambridge_in_vitro_confocal_GFP"] <- "Human cultured CU"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part1"] <- "Flylight 1"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part2"] <- "Flylight 2"
groupsdf$dataset[groupsdf$dataset=="mouse_culturedcell_Cambridge_in_vivo_2_photon_PAGFP"] <- "Mouse cultured CU"
groupsdf$dataset[groupsdf$dataset=="mouse_korea"] <- "Mouse KIT"
groupsdf$dataset[groupsdf$dataset=="mouse_RGC_uw"] <- "Mouse RGC UW"
groupsdf$dataset[groupsdf$dataset=="mouse_tufts"] <- "Mouse Allen"
groupsdf$dataset[groupsdf$dataset=="silkmoth_utokyo"] <- "Silkmoth UT"
groupsdf$dataset[groupsdf$dataset=="taiwan_flycirciut"] <- "Flycircuit"
groupsdf$dataset[groupsdf$dataset=="utokyo_fly"] <- "Fly UT"
groupsdf$dataset[groupsdf$dataset=="zebrafish_adult_RGC_UW"] <- "Zebrafish RGC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_horizontal_cells_UW"] <- "Zebrafish HC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_larve_RGC_UW"] <- "Zebrafish larvae RGC UW"
g163groups <- groupsdf
cdat_iq <- g163data[g163groups$algorithm=="Annotated",]
g163data <- cdat_iq
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu',
'FocusScore','ThresholdOstu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat_iq <- cdat_iq[,names(g163data) %in% iqmetrics]
# cdat_iq$SNR_mean[is.na(cdat_iq$SNR_mean)] <- 3e3
# cdat_iq$CNR_mean[is.na(cdat_iq$CNR_mean)] <- 3e3
# cdat_iq$SNR_otsu[is.na(cdat_iq$SNR_otsu)] <- 3e3
# cdat_iq$SNR_otsu[cdat_iq$SNR_otsu>1e10] <- 3e3
cdat_iq$CNR_otsu[is.na(cdat_iq$CNR_otsu)] <- 3e3
cdat_iq$dataset <- g163groups$dataset
cdat_iq[is.na(cdat_iq)] <- 0
# cdat_iq <- remove_missing(cdat_iq)
datasetiq <- cdat_iq$dataset
cdat_iq$dataset <- NULL
# load("../../Both_GS_and_auto/shiny_app/clustdat_iq_3D.Rdata")
# cdat_iq <- cdat
# IQ data
# plot(mclustBIC(scale(cdat_iq),G=1:15)) + abline(v = 3,col="lightblue", lwd=2, lty=2)
# hcTree <- hc(modelName = "VII", data = cdat_iq)
# plot(hcTree, what = "merge", labels = TRUE, maxG = 5)
# cdat_iq$cluster <- hclass(hcTree,5)
# clPairs(cdat_iq[,-12], classification = cdat_iq$cluster)
# clustdf <- data.frame(clustid=cdat_iq$cluster,dataset=datasetiq)
# clustdf[order(clustdf$X5),]
load("../../Both_GS_and_auto/shiny_app/clusters_iq.Rdata")
pcadata <- cdat_iq
# print(length(pcadata))
pcadata <- pcadata[,apply(pcadata, 2, var, na.rm=TRUE) != 0]
for(i in 1:length(pcadata)){
if(skewness(pcadata[,i]) > 1){
pcadata[,i] <- log10(pcadata[,i])
}
else if(skewness(pcadata[,i]) < (-1)){
pcadata[,i] <- log10(max(pcadata[,i]+1) - pcadata[,i])
}
}
pcadata[is.na(pcadata)]<-0
pcadata[pcadata=='-Inf']<-0
###############
BIC <- Mclust(scale(pcadata),G=1:15)
# save(cdat,file="clustdat.Rdata")
print(BIC$classification)
print(BIC$modelName)
memb <- BIC$classification
plot(mclustBIC(scale(pcadata)))
##############
data.pca <- prcomp(pcadata, scale = TRUE)
# colsv <- as.factor(as.numeric(as.factor(cdat_iq[,12])))
colsv <- as.factor(idsclusts$clusters_IQ)
scores = as.data.frame(data.pca$x)
pca.df <- data.frame(PCA1 = scores$PC1, PCA2 = scores$PC2, clusters = colsv)
ggbiplot(data.pca, obs.scale = 1, var.scale = 1,
ellipse = T,
alpha=0.3,
groups=colsv) +
theme_classic(base_family = 'Arial') +
theme(aspect.ratio=1) +
# geom_polygon(data=hulls,aes(x=PCA1, y=PCA2, fill = clusters, linetype=clusters), alpha = 0.2) +
scale_color_brewer(palette = 'Set2')
####
g163data <- g163data[g163groups$algorithm=="Annotated",]
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
# load("regression_learner_3DIQ.Rdata")
# load("regression_task_3DIQ.Rdata")
load("fMOST.Rdata")
load("groupsfMOST.Rdata")
my_data <- my_data[groups$algorithm=="Consensus",]
groups <- groups[groups$algorithm=="Consensus",]
names(groups)[names(groups)=="institution"] <- "Institution"
names(groups)[names(groups)=="Brain_regions"] <- "Brain_region"
my_data <- my_data[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
groups <- groups[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
# groups <- groups[,match(names(groups),names(g163groups))]
# g163data <- g163data[,c(1:21,29:58)]
my_data$xy_pixel_size <- 0.6
my_data$z_pixel_size <- 2
my_data <- my_data[,-29]
# my_data <- my_data[,match(names(my_data),names(g163data))]
# groups <- rbind(g163groups,groups)
# # g163data <- g163data[,c(1:21,29:58)]
# my_data <- my_data[ , order(names(my_data))]
# g163data <- g163data[, order(names(g163data))]
# my_data <- rbind(my_data,g163data)
# my_data$SNR_mean[is.na(my_data$SNR_mean)] <- 3e3
# my_data$CNR_mean[is.na(my_data$CNR_mean)] <- 3e3
#
# my_data$SNR_otsu[is.na(my_data$SNR_otsu)] <- 3e3
# my_data$SNR_otsu[my_data$SNR_otsu>1e10] <- 3e3
my_data$CNR_otsu[is.na(my_data$CNR_otsu)] <- 3e3
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu','FocusScore','ThresholdOtsu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat <- my_data[,names(my_data) %in% iqmetrics]
cdat$ids <- groups$ids
cdat$dataset <- groups$dataset
cdat <- unique(cdat)
cdat <- remove_missing(cdat)
grps <- data.frame(ids=cdat$ids,dataset=cdat$dataset)
cdat$ids <- NULL
cdat$dataset <- NULL
# rownames(cdat) <- paste0(grps$ids,'_',grps$dataset)
# hclust <- hclust(dist(cdat),method="ward.D2")
# dend <- colour_clusters(hclust, k=5, groupLabels=T)
# dend_labels <- labels(dend)
# labels(dend) <- ""
# plot(rev(dend),main="Hier. Clustering - IQ metrics",horiz=F)
# text(x = 1:length(dend_labels), labels = dend_labels, srt = 45, adj = c(1,1), xpd = T, cex=0.5)
####### Combined PCA
cdat_iq2 <- cdat_iq[,names(cdat_iq) %in% names(cdat)]
cdat_iq2 <- cdat_iq2[,match(names(cdat_iq2),names(cdat))]
pcadata <- rbind(cdat_iq2,cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",])
# print(length(pcadata))
# library(mlr3)
library(ggpubr)
library(dplyr)
library(dendroextras)
library(mclust)
library(ggbiplot)
#### Load shiny data
load("../../Both_GS_and_auto/shiny_app/subsetdata_v3.Rdata")
g163data <- my_data
load("../../Both_GS_and_auto/shiny_app/groupsdf.Rdata")
groupsdf$dataset <- substring(groupsdf$dataset,12)
groupsdf$dataset[groupsdf$dataset=="chick_uw"] <- "Chicken UW"
groupsdf$dataset[groupsdf$dataset=="frog_scrippts"] <- "Frog Scripps"
groupsdf$dataset[groupsdf$dataset=="fruitfly_larvae_gmu"] <- "Fly larvae GMU"
groupsdf$dataset[groupsdf$dataset=="human_allen_confocal"] <- "Human Allen"
groupsdf$dataset[groupsdf$dataset=="human_culturedcell_Cambridge_in_vitro_confocal_GFP"] <- "Human cultured CU"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part1"] <- "Flylight 1"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part2"] <- "Flylight 2"
groupsdf$dataset[groupsdf$dataset=="mouse_culturedcell_Cambridge_in_vivo_2_photon_PAGFP"] <- "Mouse cultured CU"
groupsdf$dataset[groupsdf$dataset=="mouse_korea"] <- "Mouse KIT"
groupsdf$dataset[groupsdf$dataset=="mouse_RGC_uw"] <- "Mouse RGC UW"
groupsdf$dataset[groupsdf$dataset=="mouse_tufts"] <- "Mouse Allen"
groupsdf$dataset[groupsdf$dataset=="silkmoth_utokyo"] <- "Silkmoth UT"
groupsdf$dataset[groupsdf$dataset=="taiwan_flycirciut"] <- "Flycircuit"
groupsdf$dataset[groupsdf$dataset=="utokyo_fly"] <- "Fly UT"
groupsdf$dataset[groupsdf$dataset=="zebrafish_adult_RGC_UW"] <- "Zebrafish RGC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_horizontal_cells_UW"] <- "Zebrafish HC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_larve_RGC_UW"] <- "Zebrafish larvae RGC UW"
g163groups <- groupsdf
cdat_iq <- g163data[g163groups$algorithm=="Annotated",]
g163data <- cdat_iq
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu',
'FocusScore','ThresholdOstu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat_iq <- cdat_iq[,names(g163data) %in% iqmetrics]
# cdat_iq$SNR_mean[is.na(cdat_iq$SNR_mean)] <- 3e3
# cdat_iq$CNR_mean[is.na(cdat_iq$CNR_mean)] <- 3e3
# cdat_iq$SNR_otsu[is.na(cdat_iq$SNR_otsu)] <- 3e3
# cdat_iq$SNR_otsu[cdat_iq$SNR_otsu>1e10] <- 3e3
cdat_iq$CNR_otsu[is.na(cdat_iq$CNR_otsu)] <- 3e3
cdat_iq$dataset <- g163groups$dataset
cdat_iq[is.na(cdat_iq)] <- 0
# cdat_iq <- remove_missing(cdat_iq)
datasetiq <- cdat_iq$dataset
cdat_iq$dataset <- NULL
# load("../../Both_GS_and_auto/shiny_app/clustdat_iq_3D.Rdata")
# cdat_iq <- cdat
# IQ data
# plot(mclustBIC(scale(cdat_iq),G=1:15)) + abline(v = 3,col="lightblue", lwd=2, lty=2)
# hcTree <- hc(modelName = "VII", data = cdat_iq)
# plot(hcTree, what = "merge", labels = TRUE, maxG = 5)
# cdat_iq$cluster <- hclass(hcTree,5)
# clPairs(cdat_iq[,-12], classification = cdat_iq$cluster)
# clustdf <- data.frame(clustid=cdat_iq$cluster,dataset=datasetiq)
# clustdf[order(clustdf$X5),]
load("../../Both_GS_and_auto/shiny_app/clusters_iq.Rdata")
pcadata <- cdat_iq
# print(length(pcadata))
pcadata <- pcadata[,apply(pcadata, 2, var, na.rm=TRUE) != 0]
for(i in 1:length(pcadata)){
if(skewness(pcadata[,i]) > 1){
pcadata[,i] <- log10(pcadata[,i])
}
else if(skewness(pcadata[,i]) < (-1)){
pcadata[,i] <- log10(max(pcadata[,i]+1) - pcadata[,i])
}
}
pcadata[is.na(pcadata)]<-0
pcadata[pcadata=='-Inf']<-0
###############
BIC <- Mclust(scale(pcadata),G=1:15)
# save(cdat,file="clustdat.Rdata")
print(BIC$classification)
print(BIC$modelName)
memb <- BIC$classification
plot(mclustBIC(scale(pcadata)))
##############
data.pca <- prcomp(pcadata, scale = TRUE)
# colsv <- as.factor(as.numeric(as.factor(cdat_iq[,12])))
colsv <- as.factor(idsclusts$clusters_IQ)
scores = as.data.frame(data.pca$x)
pca.df <- data.frame(PCA1 = scores$PC1, PCA2 = scores$PC2, clusters = colsv)
ggbiplot(data.pca, obs.scale = 1, var.scale = 1,
ellipse = T,
alpha=0.3,
groups=colsv) +
theme_classic(base_family = 'Arial') +
theme(aspect.ratio=1) +
# geom_polygon(data=hulls,aes(x=PCA1, y=PCA2, fill = clusters, linetype=clusters), alpha = 0.2) +
scale_color_brewer(palette = 'Set2')
####
g163data <- g163data[g163groups$algorithm=="Annotated",]
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
# load("regression_learner_3DIQ.Rdata")
# load("regression_task_3DIQ.Rdata")
load("fMOST.Rdata")
load("groupsfMOST.Rdata")
my_data <- my_data[groups$algorithm=="Consensus",]
groups <- groups[groups$algorithm=="Consensus",]
names(groups)[names(groups)=="institution"] <- "Institution"
names(groups)[names(groups)=="Brain_regions"] <- "Brain_region"
my_data <- my_data[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
groups <- groups[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
# groups <- groups[,match(names(groups),names(g163groups))]
# g163data <- g163data[,c(1:21,29:58)]
my_data$xy_pixel_size <- 0.6
my_data$z_pixel_size <- 2
my_data <- my_data[,-29]
# my_data <- my_data[,match(names(my_data),names(g163data))]
# groups <- rbind(g163groups,groups)
# # g163data <- g163data[,c(1:21,29:58)]
# my_data <- my_data[ , order(names(my_data))]
# g163data <- g163data[, order(names(g163data))]
# my_data <- rbind(my_data,g163data)
# my_data$SNR_mean[is.na(my_data$SNR_mean)] <- 3e3
# my_data$CNR_mean[is.na(my_data$CNR_mean)] <- 3e3
#
# my_data$SNR_otsu[is.na(my_data$SNR_otsu)] <- 3e3
# my_data$SNR_otsu[my_data$SNR_otsu>1e10] <- 3e3
my_data$CNR_otsu[is.na(my_data$CNR_otsu)] <- 3e3
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu','FocusScore','ThresholdOtsu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat <- my_data[,names(my_data) %in% iqmetrics]
cdat$ids <- groups$ids
cdat$dataset <- groups$dataset
cdat <- unique(cdat)
cdat <- remove_missing(cdat)
grps <- data.frame(ids=cdat$ids,dataset=cdat$dataset)
cdat$ids <- NULL
cdat$dataset <- NULL
# rownames(cdat) <- paste0(grps$ids,'_',grps$dataset)
# hclust <- hclust(dist(cdat),method="ward.D2")
# dend <- colour_clusters(hclust, k=5, groupLabels=T)
# dend_labels <- labels(dend)
# labels(dend) <- ""
# plot(rev(dend),main="Hier. Clustering - IQ metrics",horiz=F)
# text(x = 1:length(dend_labels), labels = dend_labels, srt = 45, adj = c(1,1), xpd = T, cex=0.5)
####### Combined PCA
cdat_iq2 <- cdat_iq[,names(cdat_iq) %in% names(cdat)]
cdat_iq2 <- cdat_iq2[,match(names(cdat_iq2),names(cdat))]
pcadata <- rbind(cdat_iq2,cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",])
# print(length(pcadata))
names(cdat_iq)
names(cdat)
# library(mlr3)
library(ggpubr)
library(dplyr)
library(dendroextras)
library(mclust)
library(ggbiplot)
#### Load shiny data
load("../../Both_GS_and_auto/shiny_app/subsetdata_v3.Rdata")
g163data <- my_data
load("../../Both_GS_and_auto/shiny_app/groupsdf.Rdata")
groupsdf$dataset <- substring(groupsdf$dataset,12)
groupsdf$dataset[groupsdf$dataset=="chick_uw"] <- "Chicken UW"
groupsdf$dataset[groupsdf$dataset=="frog_scrippts"] <- "Frog Scripps"
groupsdf$dataset[groupsdf$dataset=="fruitfly_larvae_gmu"] <- "Fly larvae GMU"
groupsdf$dataset[groupsdf$dataset=="human_allen_confocal"] <- "Human Allen"
groupsdf$dataset[groupsdf$dataset=="human_culturedcell_Cambridge_in_vitro_confocal_GFP"] <- "Human cultured CU"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part1"] <- "Flylight 1"
groupsdf$dataset[groupsdf$dataset=="janelia_flylight_part2"] <- "Flylight 2"
groupsdf$dataset[groupsdf$dataset=="mouse_culturedcell_Cambridge_in_vivo_2_photon_PAGFP"] <- "Mouse cultured CU"
groupsdf$dataset[groupsdf$dataset=="mouse_korea"] <- "Mouse KIT"
groupsdf$dataset[groupsdf$dataset=="mouse_RGC_uw"] <- "Mouse RGC UW"
groupsdf$dataset[groupsdf$dataset=="mouse_tufts"] <- "Mouse Allen"
groupsdf$dataset[groupsdf$dataset=="silkmoth_utokyo"] <- "Silkmoth UT"
groupsdf$dataset[groupsdf$dataset=="taiwan_flycirciut"] <- "Flycircuit"
groupsdf$dataset[groupsdf$dataset=="utokyo_fly"] <- "Fly UT"
groupsdf$dataset[groupsdf$dataset=="zebrafish_adult_RGC_UW"] <- "Zebrafish RGC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_horizontal_cells_UW"] <- "Zebrafish HC UW"
groupsdf$dataset[groupsdf$dataset=="zebrafish_larve_RGC_UW"] <- "Zebrafish larvae RGC UW"
g163groups <- groupsdf
cdat_iq <- g163data[g163groups$algorithm=="Annotated",]
g163data <- cdat_iq
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu',
'FocusScore','ThresholdOtsu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat_iq <- cdat_iq[,names(g163data) %in% iqmetrics]
# cdat_iq$SNR_mean[is.na(cdat_iq$SNR_mean)] <- 3e3
# cdat_iq$CNR_mean[is.na(cdat_iq$CNR_mean)] <- 3e3
# cdat_iq$SNR_otsu[is.na(cdat_iq$SNR_otsu)] <- 3e3
# cdat_iq$SNR_otsu[cdat_iq$SNR_otsu>1e10] <- 3e3
cdat_iq$CNR_otsu[is.na(cdat_iq$CNR_otsu)] <- 3e3
cdat_iq$dataset <- g163groups$dataset
cdat_iq[is.na(cdat_iq)] <- 0
# cdat_iq <- remove_missing(cdat_iq)
datasetiq <- cdat_iq$dataset
cdat_iq$dataset <- NULL
# load("../../Both_GS_and_auto/shiny_app/clustdat_iq_3D.Rdata")
# cdat_iq <- cdat
# IQ data
# plot(mclustBIC(scale(cdat_iq),G=1:15)) + abline(v = 3,col="lightblue", lwd=2, lty=2)
# hcTree <- hc(modelName = "VII", data = cdat_iq)
# plot(hcTree, what = "merge", labels = TRUE, maxG = 5)
# cdat_iq$cluster <- hclass(hcTree,5)
# clPairs(cdat_iq[,-12], classification = cdat_iq$cluster)
# clustdf <- data.frame(clustid=cdat_iq$cluster,dataset=datasetiq)
# clustdf[order(clustdf$X5),]
load("../../Both_GS_and_auto/shiny_app/clusters_iq.Rdata")
pcadata <- cdat_iq
# print(length(pcadata))
pcadata <- pcadata[,apply(pcadata, 2, var, na.rm=TRUE) != 0]
for(i in 1:length(pcadata)){
if(skewness(pcadata[,i]) > 1){
pcadata[,i] <- log10(pcadata[,i])
}
else if(skewness(pcadata[,i]) < (-1)){
pcadata[,i] <- log10(max(pcadata[,i]+1) - pcadata[,i])
}
}
pcadata[is.na(pcadata)]<-0
pcadata[pcadata=='-Inf']<-0
###############
BIC <- Mclust(scale(pcadata),G=1:15)
# save(cdat,file="clustdat.Rdata")
print(BIC$classification)
print(BIC$modelName)
memb <- BIC$classification
plot(mclustBIC(scale(pcadata)))
##############
data.pca <- prcomp(pcadata, scale = TRUE)
# colsv <- as.factor(as.numeric(as.factor(cdat_iq[,12])))
colsv <- as.factor(idsclusts$clusters_IQ)
scores = as.data.frame(data.pca$x)
pca.df <- data.frame(PCA1 = scores$PC1, PCA2 = scores$PC2, clusters = colsv)
ggbiplot(data.pca, obs.scale = 1, var.scale = 1,
ellipse = T,
alpha=0.3,
groups=colsv) +
theme_classic(base_family = 'Arial') +
theme(aspect.ratio=1) +
# geom_polygon(data=hulls,aes(x=PCA1, y=PCA2, fill = clusters, linetype=clusters), alpha = 0.2) +
scale_color_brewer(palette = 'Set2')
####
g163data <- g163data[g163groups$algorithm=="Annotated",]
g163groups <- g163groups[g163groups$algorithm=="Annotated",]
# load("regression_learner_3DIQ.Rdata")
# load("regression_task_3DIQ.Rdata")
load("fMOST.Rdata")
load("groupsfMOST.Rdata")
my_data <- my_data[groups$algorithm=="Consensus",]
groups <- groups[groups$algorithm=="Consensus",]
names(groups)[names(groups)=="institution"] <- "Institution"
names(groups)[names(groups)=="Brain_regions"] <- "Brain_region"
my_data <- my_data[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
groups <- groups[groups$dataset=="axons20_anisoFilter" | groups$dataset=="images20_anisoFilter",]
# groups <- groups[,match(names(groups),names(g163groups))]
# g163data <- g163data[,c(1:21,29:58)]
my_data$xy_pixel_size <- 0.6
my_data$z_pixel_size <- 2
my_data <- my_data[,-29]
# my_data <- my_data[,match(names(my_data),names(g163data))]
# groups <- rbind(g163groups,groups)
# # g163data <- g163data[,c(1:21,29:58)]
# my_data <- my_data[ , order(names(my_data))]
# g163data <- g163data[, order(names(g163data))]
# my_data <- rbind(my_data,g163data)
# my_data$SNR_mean[is.na(my_data$SNR_mean)] <- 3e3
# my_data$CNR_mean[is.na(my_data$CNR_mean)] <- 3e3
#
# my_data$SNR_otsu[is.na(my_data$SNR_otsu)] <- 3e3
# my_data$SNR_otsu[my_data$SNR_otsu>1e10] <- 3e3
my_data$CNR_otsu[is.na(my_data$CNR_otsu)] <- 3e3
iqmetrics <- c(#'SNR_mean','CNR_mean','SNR_otsu',
'CNR_otsu','FocusScore','ThresholdOtsu',
'MADIntensity','MaxIntensity','MeanIntensity','MinIntensity','MedianIntensity','PercentMaximal',
'PercentMinimal','StdIntensity','xy_pixel_size','z_pixel_size')
cdat <- my_data[,names(my_data) %in% iqmetrics]
cdat$ids <- groups$ids
cdat$dataset <- groups$dataset
cdat <- unique(cdat)
cdat <- remove_missing(cdat)
grps <- data.frame(ids=cdat$ids,dataset=cdat$dataset)
cdat$ids <- NULL
cdat$dataset <- NULL
# rownames(cdat) <- paste0(grps$ids,'_',grps$dataset)
# hclust <- hclust(dist(cdat),method="ward.D2")
# dend <- colour_clusters(hclust, k=5, groupLabels=T)
# dend_labels <- labels(dend)
# labels(dend) <- ""
# plot(rev(dend),main="Hier. Clustering - IQ metrics",horiz=F)
# text(x = 1:length(dend_labels), labels = dend_labels, srt = 45, adj = c(1,1), xpd = T, cex=0.5)
####### Combined PCA
cdat_iq2 <- cdat_iq[,names(cdat_iq) %in% names(cdat)]
cdat_iq2 <- cdat_iq2[,match(names(cdat_iq2),names(cdat))]
pcadata <- rbind(cdat_iq2,cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",])
# print(length(pcadata))
pcadata <- pcadata[,apply(pcadata, 2, var, na.rm=TRUE) != 0]
for(i in 1:length(pcadata)){
if(skewness(pcadata[,i]) > 1){
pcadata[,i] <- log10(pcadata[,i])
}
else if(skewness(pcadata[,i]) < (-1)){
pcadata[,i] <- log10(max(pcadata[,i]+1) - pcadata[,i])
}
}
pcadata[is.na(pcadata)]<-0
pcadata[pcadata=='-Inf']<-0
data.pca <- prcomp(pcadata, scale = TRUE)
fMOST_n <- length(cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",1])
colsv <- as.factor(as.numeric(as.factor(c(idsclusts$clusters_IQ,rep(7,fMOST_n/2),rep(8,fMOST_n/2)))))
scores = as.data.frame(data.pca$x)
pca.df <- data.frame(PCA1 = scores$PC1, PCA2 = scores$PC2, clusters = colsv)
ggbiplot(data.pca, obs.scale = 1, var.scale = 1,
ellipse = T,
alpha=0.3,
groups=colsv) +
theme_classic(base_family = 'Arial') +
theme(aspect.ratio=1) +
# geom_polygon(data=hulls,aes(x=PCA1, y=PCA2, fill = clusters, linetype=clusters), alpha = 0.2) +
scale_color_brewer(palette = 'Set2')
pcadata <- rbind(cdat_iq2,cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",])
pcadata[is.na(pcadata)] <- 0
pcadata <- pcadata[,apply(pcadata, 2, var, na.rm=TRUE) != 0]
for(i in 1:length(pcadata)){
if(skewness(pcadata[,i]) > 1){
pcadata[,i] <- log10(pcadata[,i])
}
else if(skewness(pcadata[,i]) < (-1)){
pcadata[,i] <- log10(max(pcadata[,i]+1) - pcadata[,i])
}
}
pcadata[is.na(pcadata)]<-0
pcadata[pcadata=='-Inf']<-0
data.pca <- prcomp(pcadata, scale = TRUE)
fMOST_n <- length(cdat[grps$dataset=="axons20_anisoFilter" | grps$dataset=="images20_anisoFilter",1])
colsv <- as.factor(as.numeric(as.factor(c(idsclusts$clusters_IQ,rep(7,fMOST_n/2),rep(8,fMOST_n/2)))))
scores = as.data.frame(data.pca$x)
pca.df <- data.frame(PCA1 = scores$PC1, PCA2 = scores$PC2, clusters = colsv)
ggbiplot(data.pca, obs.scale = 1, var.scale = 1,
ellipse = T,
alpha=0.3,
groups=colsv) +
theme_classic(base_family = 'Arial') +
theme(aspect.ratio=1) +
# geom_polygon(data=hulls,aes(x=PCA1, y=PCA2, fill = clusters, linetype=clusters), alpha = 0.2) +
scale_color_brewer(palette = 'Set2')
setwd("~/Desktop/bigneuron/Both_GS_and_auto")
setwd("~/Desktop/bigneuron/Both_GS_and_auto")
