shiny::runApp('Desktop/bigneuron/Both_GS_and_auto/shiny_app')
runApp('Desktop/bigneuron/Both_GS_and_auto/shiny_app')
setwd("~/Desktop/bigneuron/Both_GS_and_auto/shiny_app")
df <- read.csv("ShollPlot.csv")
df
ggplot(a, aes(x=radii, y=intersections, color=Model_organism)) +
geom_line()+
scale_color_brewer(palette="Set2") +
xlim(0,750) +
theme_pubr()
ggplot(df, aes(x=radii, y=intersections, color=Model_organism)) +
geom_line()+
scale_color_brewer(palette="Set2") +
xlim(0,750) +
theme_pubr()
library(ggplot2)
df <- read.csv("ShollPlot.csv")
ggplot(df, aes(x=radii, y=intersections, color=Model_organism)) +
geom_line()+
scale_color_brewer(palette="Set2") +
xlim(0,750) +
theme_pubr()
library(ggpubr)
df <- read.csv("ShollPlot.csv")
ggplot(df, aes(x=radii, y=intersections, color=Model_organism)) +
geom_line()+
scale_color_brewer(palette="Set2") +
xlim(0,750) +
theme_pubr()
df <-read.csv("VolPlot.csv")
ggplot(df, aes(x=Model_organism, y=bbx, color=Model_organism)) +
geom_boxplot(outlier.shape = NA, position=position_dodge(0.8), col = "black")+
geom_jitter(width=0.25)+
theme_pubr() +
ylim(0,5e7) +
scale_color_brewer(palette="Set2") +
theme(text = element_text(size=10),
axis.text.x = element_text(angle=45, hjust=1),
legend.position="none")
setwd("~/Desktop/bigneuron/Both_GS_and_auto")
library(ggplot2)
library(ggpubr)
# k <- read.csv('k_3D.csv',header=FALSE)
# L <- read.csv('L_3D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_3D.csv',header=FALSE)
#
# k <- read.csv('k_2D.csv',header=FALSE)
# L <- read.csv('L_2D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_2D.csv',header=FALSE)
k <- read.csv('k_species.csv',header=FALSE)
L <- read.csv('L_species.csv',header=FALSE)
SIP <- read.csv('SIP_scale_species.csv',header=FALSE)
# load('shiny_app/groupsdf.Rdata')
# load('shiny_app/subsetdata.Rdata')
# total_length <- my_data$total_length[groupsdf$group=="Gold_Standard"]
#
# groupsdf <- subset(groupsdf,groupsdf$group=="Gold_Standard")
# groupsdf$total_length <- total_length
qdeterm3d <- data.frame(k=seq(0,2,0.1),
qinv=c( 2,1.9983,1.9934,1.9852,1.9741,1.9602,1.9437,1.9251,1.9045,1.8824,1.8591,1.8349,1.8101,1.7849,
1.7596,1.7344,1.7095,1.6850,1.6610,1.6376,1.6150))
qdeterm2d <- data.frame(k=seq(0,2,0.1),
qinv=c( 1.5708,1.5695,1.5656,1.5593,1.5507,1.5400,1.5276,1.5138,1.4987,1.4829,1.4664,1.4496,1.4327,1.4160,
1.3994,1.3832,1.3675,1.3524,1.3378,1.3239,1.3106))
df2 <- data.frame(k = as.numeric(k$V1), q=as.numeric(L$V1)/as.numeric(SIP$V1),Species=c('Fruitfly',
'Human-cultured',
'Human',
'Zebrafish',
'Mouse',
'Frog',
'Silkmoth',
'Chicken')
)
# df <- data.frame(k = as.numeric(k$V1), q=1/as.numeric(SIP$V1))
# df2 <- cbind(dfids,df)#merge(dfids,df, by='ids',sort=F)
df2$Species= factor(df2$Species, levels =c('Fruitfly',
'Chicken',
'Zebrafish',
'Silkmoth',
'Frog',
'Human-cultured',
'Mouse',
'Human'))
# df2$q <- df2$q*df2$total_length
library(ggforce)
ggplot(df2,aes(x=k,y=q)) +
geom_smooth(data=qdeterm3d, aes(x=qdeterm3d$k,y=qdeterm3d$qinv),span=3,se=FALSE,color='black') +
geom_smooth(data=qdeterm2d, aes(x=qdeterm2d$k,y=qdeterm2d$qinv),span=3,se=FALSE,color='black',linetype = "dashed") +
geom_point(aes(color=df2$Species),size=1.7) +
stat_ellipse(aes(color=df2$Species),level=0.55) +
xlim(0,2) +
ylim(1.1,2.2) +
scale_color_brewer(palette="Set2") +
xlab('Centripetal bias k') +
ylab('Length / SIP scale') +
labs(color='Region') +
theme_pubr()
setwd("~/Desktop/bigneuron/Both_GS_and_auto")
library(ggplot2)
library(ggpubr)
# k <- read.csv('k_3D.csv',header=FALSE)
# L <- read.csv('L_3D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_3D.csv',header=FALSE)
#
# k <- read.csv('k_2D.csv',header=FALSE)
# L <- read.csv('L_2D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_2D.csv',header=FALSE)
k <- read.csv('k_species.csv',header=FALSE)
L <- read.csv('L_species.csv',header=FALSE)
SIP <- read.csv('SIP_scale_species.csv',header=FALSE)
# load('shiny_app/groupsdf.Rdata')
# load('shiny_app/subsetdata.Rdata')
# total_length <- my_data$total_length[groupsdf$group=="Gold_Standard"]
#
# groupsdf <- subset(groupsdf,groupsdf$group=="Gold_Standard")
# groupsdf$total_length <- total_length
qdeterm3d <- data.frame(k=seq(0,2,0.1),
qinv=c( 2,1.9983,1.9934,1.9852,1.9741,1.9602,1.9437,1.9251,1.9045,1.8824,1.8591,1.8349,1.8101,1.7849,
1.7596,1.7344,1.7095,1.6850,1.6610,1.6376,1.6150))
qdeterm2d <- data.frame(k=seq(0,2,0.1),
qinv=c( 1.5708,1.5695,1.5656,1.5593,1.5507,1.5400,1.5276,1.5138,1.4987,1.4829,1.4664,1.4496,1.4327,1.4160,
1.3994,1.3832,1.3675,1.3524,1.3378,1.3239,1.3106))
df2 <- data.frame(k = as.numeric(k$V1), q=as.numeric(L$V1)/as.numeric(SIP$V1),Species=c('Fruitfly',
'Human-cultured',
'Human',
'Zebrafish',
'Mouse',
'Frog',
'Silkmoth',
'Chicken')
)
# df <- data.frame(k = as.numeric(k$V1), q=1/as.numeric(SIP$V1))
# df2 <- cbind(dfids,df)#merge(dfids,df, by='ids',sort=F)
df2$Species= factor(df2$Species, levels =c('Fruitfly',
'Chicken',
'Zebrafish',
'Silkmoth',
'Frog',
'Human-cultured',
'Mouse',
'Human'))
# df2$q <- df2$q*df2$total_length
library(ggforce)
ggplot(df2,aes(x=k,y=q)) +
geom_smooth(data=qdeterm3d, aes(x=qdeterm3d$k,y=qdeterm3d$qinv),span=3,se=FALSE,color='black') +
geom_smooth(data=qdeterm2d, aes(x=qdeterm2d$k,y=qdeterm2d$qinv),span=3,se=FALSE,color='black',linetype = "dashed") +
geom_point(aes(color=df2$Species),size=1.7) +
stat_ellipse(aes(color=df2$Species),level=0.55) +
xlim(0,2) +
ylim(1.1,2.2) +
scale_color_brewer(palette="Set2") +
xlab('Centripetal bias k') +
ylab('Length / SIP scale') +
labs(color='Region') +
theme_pubr()
library(ggplot2)
library(ggpubr)
# k <- read.csv('k_3D.csv',header=FALSE)
# L <- read.csv('L_3D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_3D.csv',header=FALSE)
#
# k <- read.csv('k_2D.csv',header=FALSE)
# L <- read.csv('L_2D.csv',header=FALSE)
# SIP <- read.csv('SIP_scale_2D.csv',header=FALSE)
k <- read.csv('k.csv',header=FALSE)
L <- read.csv('L.csv',header=FALSE)
SIP <- read.csv('SIP_scale.csv',header=FALSE)
load('shiny_app/groupsdf.Rdata')
load('shiny_app/subsetdata.Rdata')
total_length <- my_data$total_length[groupsdf$group=="Gold_Standard"]
groupsdf <- subset(groupsdf,groupsdf$group=="Gold_Standard")
groupsdf$total_length <- total_length
# pathsgs <- read.csv("pathsgs_isotropic_3d.csv",header=F)
# pathsgs <- read.csv("pathsgs_isotropic_2d.csv",header=F)
pathsgs <- read.csv("pathsgs.csv",header=F)
ids <- as.numeric(sapply(strsplit(as.character(pathsgs$V1),'/'), "[", 8))
dfids <- data.frame(ids)
dfids <- merge(dfids, groupsdf,by="ids",sort=F)
qdeterm3d <- data.frame(k=seq(0,2,0.1),
qinv=c( 2,1.9983,1.9934,1.9852,1.9741,1.9602,1.9437,1.9251,1.9045,1.8824,1.8591,1.8349,1.8101,1.7849,
1.7596,1.7344,1.7095,1.6850,1.6610,1.6376,1.6150))
qdeterm2d <- data.frame(k=seq(0,2,0.1),
qinv=c( 1.5708,1.5695,1.5656,1.5593,1.5507,1.5400,1.5276,1.5138,1.4987,1.4829,1.4664,1.4496,1.4327,1.4160,
1.3994,1.3832,1.3675,1.3524,1.3378,1.3239,1.3106))
df <- data.frame(k = as.numeric(k$V1), q=as.numeric(L$V1)/as.numeric(SIP$V1))
# df <- data.frame(k = as.numeric(k$V1), q=1/as.numeric(SIP$V1))
df2 <- cbind(dfids,df)#merge(dfids,df, by='ids',sort=F)
df2$Model_organism = factor(df2$Model_organism, levels =c('Fruitfly',
'Chicken',
'Zebrafish',
'Silkmoth',
'Frog',
'Human-cultured',
'Mouse',
'Human'))
# df2$q <- df2$q*df2$total_length
library(ggforce)
ggplot(df2,aes(x=k,y=q)) +
geom_smooth(data=qdeterm3d, aes(x=qdeterm3d$k,y=qdeterm3d$qinv),span=3,se=FALSE,color='black') +
geom_smooth(data=qdeterm2d, aes(x=qdeterm2d$k,y=qdeterm2d$qinv),span=3,se=FALSE,color='black',linetype = "dashed") +
geom_point(aes(color=df2$Model_organism,shape=df2$Planar),size=1.7) +
stat_ellipse(aes(color=df2$Model_organism),level=0.55) +
xlim(0,2) +
ylim(1.1,2.2) +
scale_color_brewer(palette="Set2") +
xlab('Centripetal bias k') +
ylab('Length / SIP scale') +
labs(color='Region') +
theme_pubr()
ggbarplot(df2,x="Model_organism",y="k")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism", color="Model_organism")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism", color="Model_organism",
add="mean_se")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add="mean_se")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add="boxplot")
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))
ggplot(df2,aes(x=k,y=q)) +
geom_smooth(data=qdeterm3d, aes(x=qdeterm3d$k,y=qdeterm3d$qinv),span=3,se=FALSE,color='black') +
geom_smooth(data=qdeterm2d, aes(x=qdeterm2d$k,y=qdeterm2d$qinv),span=3,se=FALSE,color='black',linetype = "dashed") +
geom_point(aes(color=df2$Model_organism,shape=df2$Planar),size=1.7) +
stat_ellipse(aes(color=df2$Model_organism),level=0.55) +
xlim(0,2) +
ylim(1.1,2.2) +
scale_color_brewer(palette="Set2") +
xlab('Centripetal bias k') +
ylab('Length / SIP scale') +
labs(color='Region') +
theme_pubr()
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means(paired=T)
y_comparisons <- list( c("Chicken", "Fruitfly") )
my_comparisons <- list( c("Chicken", "Fruitfly") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means(comparisons = my_comparisons)
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(comparisons = my_comparisons)
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Frog") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Mouse") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Human") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Silkmoth") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Human-cultured") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
df2 <- df2[df2$k>0,]
my_comparisons <- list( c("Chicken", "Fruitfly"),c("Chicken", "Zebrafish"),c("Chicken", "Human-cultured") )
ggbarplot(df2,x="Model_organism",y="k", fill="Model_organism",
add=c("mean","boxplot"))+
stat_compare_means()+
stat_compare_means(method="t.test",comparisons = my_comparisons)
k
shiny::runApp('shiny_app')
runApp('shiny_app')
runApp('shiny_app')
log10(1)
df <-read.csv("~/Downloads/DistPlot.csv")
runApp('shiny_app')
